{
    "sourceFile": "src/sections/ColorSection.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 26,
            "patches": [
                {
                    "date": 1685508494161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1685508804053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,31 @@\n import React from 'react'\r\n+import styled from 'styled-components'\r\n \r\n+const Section = styled.div`\r\n+\r\n+`\r\n+\r\n+const Left = styled.div`\r\n+\r\n+`\r\n+\r\n+const Center = styled.div`\r\n+\r\n+`\r\n+\r\n+const Right = styled.div`\r\n+\r\n+`\r\n+\r\n+\r\n const ColorSection = () => {\r\n   return (\r\n-    <div>ColorSection</div>\r\n+    <Section>\r\n+      <Left></Left>\r\n+      <Center></Center>\r\n+      <Right></Right>\r\n+    </Section>\r\n   )\r\n }\r\n \r\n export default ColorSection\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685508900864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,24 @@\n import React from 'react'\r\n import styled from 'styled-components'\r\n \r\n const Section = styled.div`\r\n+  width:100vw;\r\n+  height:100vh;\r\n+  position:realtive;\r\n \r\n+  display:flex;\r\n+  justify-content:space-between;\r\n+  align-items:center;\r\n `\r\n \r\n const Left = styled.div`\r\n-\r\n+  width:50%;\r\n+  height:100%;\r\n+  display:flex;\r\n+  background-color:rgba(155.181.206,0.8);\r\n+  position:relative;\r\n+  \r\n `\r\n \r\n const Center = styled.div`\r\n \r\n"
                },
                {
                    "date": 1685509001144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,17 +16,29 @@\n   height:100%;\r\n   display:flex;\r\n   background-color:rgba(155.181.206,0.8);\r\n   position:relative;\r\n-  \r\n+\r\n `\r\n \r\n const Center = styled.div`\r\n-\r\n+  width:100%;\r\n+  text-align:center;\r\n+  position:absolute;\r\n+  top:50%;\r\n+  left:50%;\r\n+  transform:translate(-50%,-50%) rotate(-90deg);\r\n+  font-size:var(--fontxxl);\r\n+  text-transform:uppercase;\r\n+  filter:bightess(0.85)\r\n `\r\n \r\n const Right = styled.div`\r\n-\r\n+  width: 50%;\r\n+  height: 100%;\r\n+  display: flex;\r\n+  background-color: rgba(155.181.206, 0.4);\r\n+  position: relative;\r\n `\r\n \r\n \r\n const ColorSection = () => {\r\n"
                },
                {
                    "date": 1685509018742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,47 +1,68 @@\n+/* eslint-disable react-hooks/exhaustive-deps */\r\n+import gsap from 'gsap'\r\n import React from 'react'\r\n+import { useRef, useLayoutEffect } from 'react'\r\n import styled from 'styled-components'\r\n+import { Canvas } from '@react-three/fiber'\r\n+import { Suspense } from 'react'\r\n+import Model2 from '../components/Scene2'\r\n+import { useContext } from 'react'\r\n+import { ColorContext } from './../context/ColorContext'\r\n+import { useEffect } from 'react'\r\n \r\n-const Section = styled.div`\r\n-  width:100vw;\r\n-  height:100vh;\r\n-  position:realtive;\r\n+const Section = styled.section`\r\n+  width: 100vw;\r\n+  height: 100vh;\r\n+  position: relative;\r\n \r\n-  display:flex;\r\n-  justify-content:space-between;\r\n-  align-items:center;\r\n+  display: flex;\r\n+  justify-content: space-between;\r\n+  align-items: center;\r\n `\r\n \r\n const Left = styled.div`\r\n-  width:50%;\r\n-  height:100%;\r\n-  display:flex;\r\n-  background-color:rgba(155.181.206,0.8);\r\n-  position:relative;\r\n+  width: 50%;\r\n+  height: 100%;\r\n \r\n-`\r\n+  display: flex;\r\n+  background-color: rgba(155, 181, 206, 0.8);\r\n+  position: relative;\r\n \r\n-const Center = styled.div`\r\n-  width:100%;\r\n-  text-align:center;\r\n-  position:absolute;\r\n-  top:50%;\r\n-  left:50%;\r\n-  transform:translate(-50%,-50%) rotate(-90deg);\r\n-  font-size:var(--fontxxl);\r\n-  text-transform:uppercase;\r\n-  filter:bightess(0.85)\r\n+  @media screen and (max-width: 48em) {\r\n+    width: 100%;\r\n+  }\r\n `\r\n-\r\n const Right = styled.div`\r\n   width: 50%;\r\n   height: 100%;\r\n+\r\n   display: flex;\r\n-  background-color: rgba(155.181.206, 0.4);\r\n+  background-color: rgba(155, 181, 206, 0.4);\r\n   position: relative;\r\n+\r\n+  @media screen and (max-width: 48em) {\r\n+    display: none;\r\n+  }\r\n `\r\n \r\n+const Center = styled.div`\r\n+  width: 100%;\r\n+  text-align: center;\r\n+  position: absolute;\r\n+  top: 50%;\r\n+  left: 50%;\r\n+  transform: translate(-50%, -50%) rotate(-90deg);\r\n+  font-size: var(--fontxxl);\r\n+  text-transform: uppercase;\r\n+  filter: brightness(0.85);\r\n \r\n+  @media screen and (max-width: 48em) {\r\n+    top: 2rem;\r\n+    transform: translate(-50%, 0%) rotate(0deg);\r\n+  }\r\n+`\r\n+\r\n const ColorSection = () => {\r\n   return (\r\n     <Section>\r\n       <Left></Left>\r\n@@ -50,5 +71,5 @@\n     </Section>\r\n   )\r\n }\r\n \r\n-export default ColorSection\n\\ No newline at end of file\n+export default ColorSection\r\n"
                },
                {
                    "date": 1685509036437,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,8 @@\n /* eslint-disable react-hooks/exhaustive-deps */\r\n import gsap from 'gsap'\r\n import React from 'react'\r\n-import { useRef, useLayoutEffect } from 'react'\r\n import styled from 'styled-components'\r\n-import { Canvas } from '@react-three/fiber'\r\n-import { Suspense } from 'react'\r\n-import Model2 from '../components/Scene2'\r\n-import { useContext } from 'react'\r\n-import { ColorContext } from './../context/ColorContext'\r\n-import { useEffect } from 'react'\r\n \r\n const Section = styled.section`\r\n   width: 100vw;\r\n   height: 100vh;\r\n"
                },
                {
                    "date": 1685509063859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n const ColorSection = () => {\r\n   return (\r\n     <Section>\r\n       <Left></Left>\r\n-      <Center></Center>\r\n+      <Center>Sierra blue</Center>\r\n       <Right></Right>\r\n     </Section>\r\n   )\r\n }\r\n"
                },
                {
                    "date": 1685509600705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,15 @@\n /* eslint-disable react-hooks/exhaustive-deps */\r\n import gsap from 'gsap'\r\n import React from 'react'\r\n+import { useRef, useLayoutEffect } from 'react'\r\n import styled from 'styled-components'\r\n+import { Canvas } from '@react-three/fiber'\r\n+import { Suspense } from 'react'\r\n+import Model2 from '../components/Scene2'\r\n+import { useContext } from 'react'\r\n+import { ColorContext } from './../context/ColorContext'\r\n+import { useEffect } from 'react'\r\n \r\n const Section = styled.section`\r\n   width: 100vw;\r\n   height: 100vh;\r\n@@ -55,13 +62,116 @@\n   }\r\n `\r\n \r\n const ColorSection = () => {\r\n+  const sectionRef = useRef(null)\r\n+  const rightRef = useRef(null)\r\n+  const leftRef = useRef(null)\r\n+  const textRef = useRef(null)\r\n+\r\n+  const { currentColor, changeColorContext } = useContext(ColorContext)\r\n+\r\n+  useEffect(() => {\r\n+    let rightElem = rightRef.current\r\n+    let leftElem = leftRef.current\r\n+    let textElem = textRef.current\r\n+\r\n+    textElem.innerText = currentColor.text\r\n+    textElem.style.color = currentColor.color\r\n+\r\n+    rightElem.style.backgroundColor = `rgba(${currentColor.rgbColor}, 0.4)`\r\n+    leftElem.style.backgroundColor = `rgba(${currentColor.rgbColor}, 0.8)`\r\n+  }, [currentColor])\r\n+\r\n+  useLayoutEffect(() => {\r\n+    let Elem = sectionRef.current\r\n+\r\n+    let updateColor = (color, text, rgbColor) => {\r\n+      const colorObj = {\r\n+        color,\r\n+        text,\r\n+        rgbColor\r\n+      }\r\n+      changeColorContext(colorObj)\r\n+    }\r\n+\r\n+    // pin the section\r\n+    gsap.to(Elem, {\r\n+      scrollTrigger: {\r\n+        trigger: Elem,\r\n+        start: 'top top',\r\n+        end: `+=${Elem.offsetWidth + 1000}`,\r\n+        scrub: 1,\r\n+        pin: true,\r\n+        pinSpacing: true\r\n+      }\r\n+    })\r\n+\r\n+    let t2 = gsap\r\n+      .timeline({\r\n+        scrollTrigger: {\r\n+          trigger: Elem,\r\n+          start: 'top top',\r\n+          end: `+=${Elem.offsetWidth + 1000}`,\r\n+          scrub: 1\r\n+        }\r\n+      })\r\n+      .to(Elem, {\r\n+        onStart: updateColor,\r\n+        onStartParams: ['#9BB5CE', 'Sierra Blue', '155, 181, 206'],\r\n+        onReverseComplete: updateColor,\r\n+        onReverseCompleteParams: ['#9BB5CE', 'Sierra Blue', '155, 181, 206']\r\n+      })\r\n+      .to(Elem, {\r\n+        onStart: updateColor,\r\n+        onStartParams: ['#F9E5C9', 'Gold', '249, 229, 201'],\r\n+        onReverseComplete: updateColor,\r\n+        onReverseCompleteParams: ['#F9E5C9', 'Gold', '249, 229, 201']\r\n+      })\r\n+      .to(Elem, {\r\n+        onStart: updateColor,\r\n+        onStartParams: ['#505F4E', 'Alpine Green', '80, 95, 78'],\r\n+        onReverseComplete: updateColor,\r\n+        onReverseCompleteParams: ['#505F4E', 'Alpine Green', '80, 95, 78']\r\n+      })\r\n+      .to(Elem, {\r\n+        onStart: updateColor,\r\n+        onStartParams: ['#574f6f', 'Deep Purple', '87, 79, 111'],\r\n+        onReverseComplete: updateColor,\r\n+        onReverseCompleteParams: ['#574f6f', 'Deep Purple', '87, 79, 111']\r\n+      })\r\n+      .to(Elem, {\r\n+        onStart: updateColor,\r\n+        onStartParams: ['#A50011', 'Red', '165, 0, 17'],\r\n+        onReverseComplete: updateColor,\r\n+        onReverseCompleteParams: ['#A50011', 'Red', '165, 0, 17']\r\n+      })\r\n+      .to(Elem, {\r\n+        onStart: updateColor,\r\n+        onStartParams: ['#215E7C', 'Blue', '33, 94, 124'],\r\n+        onReverseComplete: updateColor,\r\n+        onReverseCompleteParams: ['#215E7C', 'Blue', '33, 94, 124']\r\n+      })\r\n+\r\n+    return () => {\r\n+      if (t2) t2.kill()\r\n+    }\r\n+  }, [])\r\n+\r\n   return (\r\n-    <Section>\r\n-      <Left></Left>\r\n-      <Center>Sierra blue</Center>\r\n-      <Right></Right>\r\n+    <Section ref={sectionRef}>\r\n+      <Left ref={leftRef} />\r\n+      <Center ref={textRef} />\r\n+      <Right ref={rightRef}>\r\n+        <Canvas camera={{ fov: 6.5 }}>\r\n+          <ambientLight intensity={1.25} />\r\n+          <directionalLight intensity={0.4} />\r\n+          <Suspense fallback={null}>\r\n+            <Model2 />\r\n+          </Suspense>\r\n+          {/* <OrbitControls /> */}\r\n+        </Canvas>\r\n+      </Right>\r\n     </Section>\r\n   )\r\n }\r\n \r\n"
                },
                {
                    "date": 1685509624427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,16 +161,9 @@\n     <Section ref={sectionRef}>\r\n       <Left ref={leftRef} />\r\n       <Center ref={textRef} />\r\n       <Right ref={rightRef}>\r\n-        <Canvas camera={{ fov: 6.5 }}>\r\n-          <ambientLight intensity={1.25} />\r\n-          <directionalLight intensity={0.4} />\r\n-          <Suspense fallback={null}>\r\n-            <Model2 />\r\n-          </Suspense>\r\n-          {/* <OrbitControls /> */}\r\n-        </Canvas>\r\n+        \r\n       </Right>\r\n     </Section>\r\n   )\r\n }\r\n"
                },
                {
                    "date": 1685509631990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,8 @@\n import gsap from 'gsap'\r\n import React from 'react'\r\n import { useRef, useLayoutEffect } from 'react'\r\n import styled from 'styled-components'\r\n-import { Canvas } from '@react-three/fiber'\r\n-import { Suspense } from 'react'\r\n-import Model2 from '../components/Scene2'\r\n import { useContext } from 'react'\r\n import { ColorContext } from './../context/ColorContext'\r\n import { useEffect } from 'react'\r\n \r\n"
                },
                {
                    "date": 1685509698844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,8 @@\n import React from 'react'\r\n import { useRef, useLayoutEffect } from 'react'\r\n import styled from 'styled-components'\r\n import { useContext } from 'react'\r\n-import { ColorContext } from './../context/ColorContext'\r\n import { useEffect } from 'react'\r\n \r\n const Section = styled.section`\r\n   width: 100vw;\r\n"
                },
                {
                    "date": 1685509775263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,8 @@\n /* eslint-disable react-hooks/exhaustive-deps */\r\n import gsap from 'gsap'\r\n import React from 'react'\r\n-import { useRef, useLayoutEffect } from 'react'\r\n import styled from 'styled-components'\r\n-import { useContext } from 'react'\r\n-import { useEffect } from 'react'\r\n \r\n const Section = styled.section`\r\n   width: 100vw;\r\n   height: 100vh;\r\n@@ -58,109 +55,13 @@\n   }\r\n `\r\n \r\n const ColorSection = () => {\r\n-  const sectionRef = useRef(null)\r\n-  const rightRef = useRef(null)\r\n-  const leftRef = useRef(null)\r\n-  const textRef = useRef(null)\r\n-\r\n-  const { currentColor, changeColorContext } = useContext(ColorContext)\r\n-\r\n-  useEffect(() => {\r\n-    let rightElem = rightRef.current\r\n-    let leftElem = leftRef.current\r\n-    let textElem = textRef.current\r\n-\r\n-    textElem.innerText = currentColor.text\r\n-    textElem.style.color = currentColor.color\r\n-\r\n-    rightElem.style.backgroundColor = `rgba(${currentColor.rgbColor}, 0.4)`\r\n-    leftElem.style.backgroundColor = `rgba(${currentColor.rgbColor}, 0.8)`\r\n-  }, [currentColor])\r\n-\r\n-  useLayoutEffect(() => {\r\n-    let Elem = sectionRef.current\r\n-\r\n-    let updateColor = (color, text, rgbColor) => {\r\n-      const colorObj = {\r\n-        color,\r\n-        text,\r\n-        rgbColor\r\n-      }\r\n-      changeColorContext(colorObj)\r\n-    }\r\n-\r\n-    // pin the section\r\n-    gsap.to(Elem, {\r\n-      scrollTrigger: {\r\n-        trigger: Elem,\r\n-        start: 'top top',\r\n-        end: `+=${Elem.offsetWidth + 1000}`,\r\n-        scrub: 1,\r\n-        pin: true,\r\n-        pinSpacing: true\r\n-      }\r\n-    })\r\n-\r\n-    let t2 = gsap\r\n-      .timeline({\r\n-        scrollTrigger: {\r\n-          trigger: Elem,\r\n-          start: 'top top',\r\n-          end: `+=${Elem.offsetWidth + 1000}`,\r\n-          scrub: 1\r\n-        }\r\n-      })\r\n-      .to(Elem, {\r\n-        onStart: updateColor,\r\n-        onStartParams: ['#9BB5CE', 'Sierra Blue', '155, 181, 206'],\r\n-        onReverseComplete: updateColor,\r\n-        onReverseCompleteParams: ['#9BB5CE', 'Sierra Blue', '155, 181, 206']\r\n-      })\r\n-      .to(Elem, {\r\n-        onStart: updateColor,\r\n-        onStartParams: ['#F9E5C9', 'Gold', '249, 229, 201'],\r\n-        onReverseComplete: updateColor,\r\n-        onReverseCompleteParams: ['#F9E5C9', 'Gold', '249, 229, 201']\r\n-      })\r\n-      .to(Elem, {\r\n-        onStart: updateColor,\r\n-        onStartParams: ['#505F4E', 'Alpine Green', '80, 95, 78'],\r\n-        onReverseComplete: updateColor,\r\n-        onReverseCompleteParams: ['#505F4E', 'Alpine Green', '80, 95, 78']\r\n-      })\r\n-      .to(Elem, {\r\n-        onStart: updateColor,\r\n-        onStartParams: ['#574f6f', 'Deep Purple', '87, 79, 111'],\r\n-        onReverseComplete: updateColor,\r\n-        onReverseCompleteParams: ['#574f6f', 'Deep Purple', '87, 79, 111']\r\n-      })\r\n-      .to(Elem, {\r\n-        onStart: updateColor,\r\n-        onStartParams: ['#A50011', 'Red', '165, 0, 17'],\r\n-        onReverseComplete: updateColor,\r\n-        onReverseCompleteParams: ['#A50011', 'Red', '165, 0, 17']\r\n-      })\r\n-      .to(Elem, {\r\n-        onStart: updateColor,\r\n-        onStartParams: ['#215E7C', 'Blue', '33, 94, 124'],\r\n-        onReverseComplete: updateColor,\r\n-        onReverseCompleteParams: ['#215E7C', 'Blue', '33, 94, 124']\r\n-      })\r\n-\r\n-    return () => {\r\n-      if (t2) t2.kill()\r\n-    }\r\n-  }, [])\r\n-\r\n   return (\r\n-    <Section ref={sectionRef}>\r\n-      <Left ref={leftRef} />\r\n-      <Center ref={textRef} />\r\n-      <Right ref={rightRef}>\r\n-        \r\n-      </Right>\r\n+    <Section>\r\n+      <Left></Left>\r\n+      <Center>Sierra blue</Center>\r\n+      <Right></Right>\r\n     </Section>\r\n   )\r\n }\r\n \r\n"
                },
                {
                    "date": 1685509829152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,8 +55,83 @@\n   }\r\n `\r\n \r\n const ColorSection = () => {\r\n+\r\n+    useLayoutEffect(() => {\r\n+      let Elem = sectionRef.current\r\n+\r\n+      let updateColor = (color, text, rgbColor) => {\r\n+        const colorObj = {\r\n+          color,\r\n+          text,\r\n+          rgbColor\r\n+        }\r\n+        changeColorContext(colorObj)\r\n+      }\r\n+\r\n+      // pin the section\r\n+      gsap.to(Elem, {\r\n+        scrollTrigger: {\r\n+          trigger: Elem,\r\n+          start: 'top top',\r\n+          end: `+=${Elem.offsetWidth + 1000}`,\r\n+          scrub: 1,\r\n+          pin: true,\r\n+          pinSpacing: true\r\n+        }\r\n+      })\r\n+\r\n+      let t2 = gsap\r\n+        .timeline({\r\n+          scrollTrigger: {\r\n+            trigger: Elem,\r\n+            start: 'top top',\r\n+            end: `+=${Elem.offsetWidth + 1000}`,\r\n+            scrub: 1\r\n+          }\r\n+        })\r\n+        .to(Elem, {\r\n+          onStart: updateColor,\r\n+          onStartParams: ['#9BB5CE', 'Sierra Blue', '155, 181, 206'],\r\n+          onReverseComplete: updateColor,\r\n+          onReverseCompleteParams: ['#9BB5CE', 'Sierra Blue', '155, 181, 206']\r\n+        })\r\n+        .to(Elem, {\r\n+          onStart: updateColor,\r\n+          onStartParams: ['#F9E5C9', 'Gold', '249, 229, 201'],\r\n+          onReverseComplete: updateColor,\r\n+          onReverseCompleteParams: ['#F9E5C9', 'Gold', '249, 229, 201']\r\n+        })\r\n+        .to(Elem, {\r\n+          onStart: updateColor,\r\n+          onStartParams: ['#505F4E', 'Alpine Green', '80, 95, 78'],\r\n+          onReverseComplete: updateColor,\r\n+          onReverseCompleteParams: ['#505F4E', 'Alpine Green', '80, 95, 78']\r\n+        })\r\n+        .to(Elem, {\r\n+          onStart: updateColor,\r\n+          onStartParams: ['#574f6f', 'Deep Purple', '87, 79, 111'],\r\n+          onReverseComplete: updateColor,\r\n+          onReverseCompleteParams: ['#574f6f', 'Deep Purple', '87, 79, 111']\r\n+        })\r\n+        .to(Elem, {\r\n+          onStart: updateColor,\r\n+          onStartParams: ['#A50011', 'Red', '165, 0, 17'],\r\n+          onReverseComplete: updateColor,\r\n+          onReverseCompleteParams: ['#A50011', 'Red', '165, 0, 17']\r\n+        })\r\n+        .to(Elem, {\r\n+          onStart: updateColor,\r\n+          onStartParams: ['#215E7C', 'Blue', '33, 94, 124'],\r\n+          onReverseComplete: updateColor,\r\n+          onReverseCompleteParams: ['#215E7C', 'Blue', '33, 94, 124']\r\n+        })\r\n+\r\n+      return () => {\r\n+        if (t2) t2.kill()\r\n+      }\r\n+    }, [])\r\n   return (\r\n     <Section>\r\n       <Left></Left>\r\n       <Center>Sierra blue</Center>\r\n"
                },
                {
                    "date": 1685509841737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n         }\r\n         changeColorContext(colorObj)\r\n       }\r\n \r\n-      // pin the section\r\n+      // pin the section \r\n       gsap.to(Elem, {\r\n         scrollTrigger: {\r\n           trigger: Elem,\r\n           start: 'top top',\r\n"
                },
                {
                    "date": 1685509864691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n \r\n   display: flex;\r\n   justify-content: space-between;\r\n   align-items: center;\r\n+\r\n `\r\n \r\n const Left = styled.div`\r\n   width: 50%;\r\n@@ -52,8 +53,10 @@\n   @media screen and (max-width: 48em) {\r\n     top: 2rem;\r\n     transform: translate(-50%, 0%) rotate(0deg);\r\n   }\r\n+\r\n+  \r\n `\r\n \r\n const ColorSection = () => {\r\n \r\n"
                },
                {
                    "date": 1685509939681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,12 +54,16 @@\n     top: 2rem;\r\n     transform: translate(-50%, 0%) rotate(0deg);\r\n   }\r\n \r\n-  \r\n+\r\n `\r\n \r\n const ColorSection = () => {\r\n+  const sectionRef = useRef(null)\r\n+  const rightRef = useRef(null)\r\n+  const leftRef = useRef(null)\r\n+  const textRef = useRef(null)\r\n \r\n     useLayoutEffect(() => {\r\n       let Elem = sectionRef.current\r\n \r\n@@ -134,12 +138,12 @@\n         if (t2) t2.kill()\r\n       }\r\n     }, [])\r\n   return (\r\n-    <Section>\r\n-      <Left></Left>\r\n-      <Center>Sierra blue</Center>\r\n-      <Right></Right>\r\n+    <Section ref={sectionRef}>\r\n+      <Left ref={leftRef}></Left>\r\n+      <Center ref={textRef}>Sierra blue</Center>\r\n+      <Right ref={rightRef}></Right>\r\n     </Section>\r\n   )\r\n }\r\n \r\n"
                },
                {
                    "date": 1685509959422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n /* eslint-disable react-hooks/exhaustive-deps */\r\n import gsap from 'gsap'\r\n-import React from 'react'\r\n+import React, { useLayoutEffect, useRef } from 'react'\r\n import styled from 'styled-components'\r\n \r\n const Section = styled.section`\r\n   width: 100vw;\r\n@@ -72,9 +72,9 @@\n           color,\r\n           text,\r\n           rgbColor\r\n         }\r\n-        changeColorContext(colorObj)\r\n+        // changeColorContext(colorObj)\r\n       }\r\n \r\n       // pin the section \r\n       gsap.to(Elem, {\r\n"
                },
                {
                    "date": 1685510273321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,15 +65,22 @@\n   const textRef = useRef(null)\r\n \r\n     useLayoutEffect(() => {\r\n       let Elem = sectionRef.current\r\n+      let rightElem = rightRef.current\r\n+      let textElem = textRef.current\r\n+      let leftElem = leftRef.current\r\n \r\n+\r\n       let updateColor = (color, text, rgbColor) => {\r\n-        const colorObj = {\r\n-          color,\r\n-          text,\r\n-          rgbColor\r\n-        }\r\n+        textElem.innerText = text;\r\n+        rightElem.style.background = `rgba(${rgbColor},0.4)`\r\n+        leftElem.style.background = `rgba(${rgbColor},0.8)`\r\n+        // const colorObj = {\r\n+        //   color,\r\n+        //   text,\r\n+        //   rgbColor\r\n+        // }\r\n         // changeColorContext(colorObj)\r\n       }\r\n \r\n       // pin the section \r\n"
                },
                {
                    "date": 1685532153059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n /* eslint-disable react-hooks/exhaustive-deps */\r\n+import { useGLTF } from '@react-three/drei'\r\n import gsap from 'gsap'\r\n import React, { useLayoutEffect, useRef } from 'react'\r\n import styled from 'styled-components'\r\n \r\n@@ -62,9 +63,9 @@\n   const sectionRef = useRef(null)\r\n   const rightRef = useRef(null)\r\n   const leftRef = useRef(null)\r\n   const textRef = useRef(null)\r\n-\r\n+const {  materials } = useGLTF('/scene.gltf')\r\n     useLayoutEffect(() => {\r\n       let Elem = sectionRef.current\r\n       let rightElem = rightRef.current\r\n       let textElem = textRef.current\r\n"
                },
                {
                    "date": 1685532279897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,8 +72,9 @@\n       let leftElem = leftRef.current\r\n \r\n \r\n       let updateColor = (color, text, rgbColor) => {\r\n+        materials.color.set(color);\r\n         textElem.innerText = text;\r\n         rightElem.style.background = `rgba(${rgbColor},0.4)`\r\n         leftElem.style.background = `rgba(${rgbColor},0.8)`\r\n         // const colorObj = {\r\n@@ -148,9 +149,9 @@\n     }, [])\r\n   return (\r\n     <Section ref={sectionRef}>\r\n       <Left ref={leftRef}></Left>\r\n-      <Center ref={textRef}>Sierra blue</Center>\r\n+      <Center ref={textRef}/>\r\n       <Right ref={rightRef}></Right>\r\n     </Section>\r\n   )\r\n }\r\n"
                },
                {
                    "date": 1685532363576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n       let leftElem = leftRef.current\r\n \r\n \r\n       let updateColor = (color, text, rgbColor) => {\r\n-        materials.color.set(color);\r\n+        materials.Body.color.set(color);\r\n         textElem.innerText = text;\r\n         rightElem.style.background = `rgba(${rgbColor},0.4)`\r\n         leftElem.style.background = `rgba(${rgbColor},0.8)`\r\n         // const colorObj = {\r\n"
                },
                {
                    "date": 1685532794796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,10 +149,21 @@\n     }, [])\r\n   return (\r\n     <Section ref={sectionRef}>\r\n       <Left ref={leftRef}></Left>\r\n-      <Center ref={textRef}/>\r\n+      <Center ref={textRef} />\r\n       <Right ref={rightRef}></Right>\r\n+      <Canvas camera={{ fov: 14 }}>\r\n+        <ambientLight intensity={1.25} />\r\n+        <directionalLight intensity={0.4} />\r\n+        <Suspense fallback={null}>\r\n+          <Model />\r\n+        </Suspense>\r\n+        <Environment preset=\"night\" />\r\n+        <AdaptiveDpr pixelated />\r\n+        <AdaptiveEvents />\r\n+        {/* <OrbitControls /> */}\r\n+      </Canvas>\r\n     </Section>\r\n   )\r\n }\r\n \r\n"
                },
                {
                    "date": 1685532815948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,11 @@\n /* eslint-disable react-hooks/exhaustive-deps */\r\n-import { useGLTF } from '@react-three/drei'\r\n+import { AdaptiveDpr, AdaptiveEvents, Environment, useGLTF } from '@react-three/drei'\r\n+import { Canvas } from '@react-three/fiber'\r\n import gsap from 'gsap'\r\n-import React, { useLayoutEffect, useRef } from 'react'\r\n+import React, { Suspense, useLayoutEffect, useRef } from 'react'\r\n import styled from 'styled-components'\r\n+import Model2 from '../components/Scene2'\r\n \r\n const Section = styled.section`\r\n   width: 100vw;\r\n   height: 100vh;\r\n@@ -155,9 +157,9 @@\n       <Canvas camera={{ fov: 14 }}>\r\n         <ambientLight intensity={1.25} />\r\n         <directionalLight intensity={0.4} />\r\n         <Suspense fallback={null}>\r\n-          <Model />\r\n+          <Model2 />\r\n         </Suspense>\r\n         <Environment preset=\"night\" />\r\n         <AdaptiveDpr pixelated />\r\n         <AdaptiveEvents />\r\n"
                },
                {
                    "date": 1685532839797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,9 +153,9 @@\n     <Section ref={sectionRef}>\r\n       <Left ref={leftRef}></Left>\r\n       <Center ref={textRef} />\r\n       <Right ref={rightRef}></Right>\r\n-      <Canvas camera={{ fov: 14 }}>\r\n+      <Canvas camera={{ fov: 6.5 }}>\r\n         <ambientLight intensity={1.25} />\r\n         <directionalLight intensity={0.4} />\r\n         <Suspense fallback={null}>\r\n           <Model2 />\r\n"
                },
                {
                    "date": 1685533048565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,15 @@\n /* eslint-disable react-hooks/exhaustive-deps */\r\n-import { AdaptiveDpr, AdaptiveEvents, Environment, useGLTF } from '@react-three/drei'\r\n-import { Canvas } from '@react-three/fiber'\r\n import gsap from 'gsap'\r\n-import React, { Suspense, useLayoutEffect, useRef } from 'react'\r\n+import React from 'react'\r\n+import { useRef, useLayoutEffect } from 'react'\r\n import styled from 'styled-components'\r\n+import { Canvas } from '@react-three/fiber'\r\n+import { Suspense } from 'react'\r\n import Model2 from '../components/Scene2'\r\n+import { useContext } from 'react'\r\n+import { ColorContext } from './../context/ColorContext'\r\n+import { useEffect } from 'react'\r\n \r\n const Section = styled.section`\r\n   width: 100vw;\r\n   height: 100vh;\r\n@@ -13,9 +17,8 @@\n \r\n   display: flex;\r\n   justify-content: space-between;\r\n   align-items: center;\r\n-\r\n `\r\n \r\n const Left = styled.div`\r\n   width: 50%;\r\n@@ -56,116 +59,119 @@\n   @media screen and (max-width: 48em) {\r\n     top: 2rem;\r\n     transform: translate(-50%, 0%) rotate(0deg);\r\n   }\r\n-\r\n-\r\n `\r\n \r\n const ColorSection = () => {\r\n   const sectionRef = useRef(null)\r\n   const rightRef = useRef(null)\r\n   const leftRef = useRef(null)\r\n   const textRef = useRef(null)\r\n-const {  materials } = useGLTF('/scene.gltf')\r\n-    useLayoutEffect(() => {\r\n-      let Elem = sectionRef.current\r\n-      let rightElem = rightRef.current\r\n-      let textElem = textRef.current\r\n-      let leftElem = leftRef.current\r\n \r\n+  const { currentColor, changeColorContext } = useContext(ColorContext)\r\n \r\n-      let updateColor = (color, text, rgbColor) => {\r\n-        materials.Body.color.set(color);\r\n-        textElem.innerText = text;\r\n-        rightElem.style.background = `rgba(${rgbColor},0.4)`\r\n-        leftElem.style.background = `rgba(${rgbColor},0.8)`\r\n-        // const colorObj = {\r\n-        //   color,\r\n-        //   text,\r\n-        //   rgbColor\r\n-        // }\r\n-        // changeColorContext(colorObj)\r\n+  useEffect(() => {\r\n+    let rightElem = rightRef.current\r\n+    let leftElem = leftRef.current\r\n+    let textElem = textRef.current\r\n+\r\n+    textElem.innerText = currentColor.text\r\n+    textElem.style.color = currentColor.color\r\n+\r\n+    rightElem.style.backgroundColor = `rgba(${currentColor.rgbColor}, 0.4)`\r\n+    leftElem.style.backgroundColor = `rgba(${currentColor.rgbColor}, 0.8)`\r\n+  }, [currentColor])\r\n+\r\n+  useLayoutEffect(() => {\r\n+    let Elem = sectionRef.current\r\n+\r\n+    let updateColor = (color, text, rgbColor) => {\r\n+      const colorObj = {\r\n+        color,\r\n+        text,\r\n+        rgbColor\r\n       }\r\n+      changeColorContext(colorObj)\r\n+    }\r\n \r\n-      // pin the section \r\n-      gsap.to(Elem, {\r\n+    // pin the section\r\n+    gsap.to(Elem, {\r\n+      scrollTrigger: {\r\n+        trigger: Elem,\r\n+        start: 'top top',\r\n+        end: `+=${Elem.offsetWidth + 1000}`,\r\n+        scrub: 1,\r\n+        pin: true,\r\n+        pinSpacing: true\r\n+      }\r\n+    })\r\n+\r\n+    let t2 = gsap\r\n+      .timeline({\r\n         scrollTrigger: {\r\n           trigger: Elem,\r\n           start: 'top top',\r\n           end: `+=${Elem.offsetWidth + 1000}`,\r\n-          scrub: 1,\r\n-          pin: true,\r\n-          pinSpacing: true\r\n+          scrub: 1\r\n         }\r\n       })\r\n+      .to(Elem, {\r\n+        onStart: updateColor,\r\n+        onStartParams: ['#9BB5CE', 'Sierra Blue', '155, 181, 206'],\r\n+        onReverseComplete: updateColor,\r\n+        onReverseCompleteParams: ['#9BB5CE', 'Sierra Blue', '155, 181, 206']\r\n+      })\r\n+      .to(Elem, {\r\n+        onStart: updateColor,\r\n+        onStartParams: ['#F9E5C9', 'Gold', '249, 229, 201'],\r\n+        onReverseComplete: updateColor,\r\n+        onReverseCompleteParams: ['#F9E5C9', 'Gold', '249, 229, 201']\r\n+      })\r\n+      .to(Elem, {\r\n+        onStart: updateColor,\r\n+        onStartParams: ['#505F4E', 'Alpine Green', '80, 95, 78'],\r\n+        onReverseComplete: updateColor,\r\n+        onReverseCompleteParams: ['#505F4E', 'Alpine Green', '80, 95, 78']\r\n+      })\r\n+      .to(Elem, {\r\n+        onStart: updateColor,\r\n+        onStartParams: ['#574f6f', 'Deep Purple', '87, 79, 111'],\r\n+        onReverseComplete: updateColor,\r\n+        onReverseCompleteParams: ['#574f6f', 'Deep Purple', '87, 79, 111']\r\n+      })\r\n+      .to(Elem, {\r\n+        onStart: updateColor,\r\n+        onStartParams: ['#A50011', 'Red', '165, 0, 17'],\r\n+        onReverseComplete: updateColor,\r\n+        onReverseCompleteParams: ['#A50011', 'Red', '165, 0, 17']\r\n+      })\r\n+      .to(Elem, {\r\n+        onStart: updateColor,\r\n+        onStartParams: ['#215E7C', 'Blue', '33, 94, 124'],\r\n+        onReverseComplete: updateColor,\r\n+        onReverseCompleteParams: ['#215E7C', 'Blue', '33, 94, 124']\r\n+      })\r\n \r\n-      let t2 = gsap\r\n-        .timeline({\r\n-          scrollTrigger: {\r\n-            trigger: Elem,\r\n-            start: 'top top',\r\n-            end: `+=${Elem.offsetWidth + 1000}`,\r\n-            scrub: 1\r\n-          }\r\n-        })\r\n-        .to(Elem, {\r\n-          onStart: updateColor,\r\n-          onStartParams: ['#9BB5CE', 'Sierra Blue', '155, 181, 206'],\r\n-          onReverseComplete: updateColor,\r\n-          onReverseCompleteParams: ['#9BB5CE', 'Sierra Blue', '155, 181, 206']\r\n-        })\r\n-        .to(Elem, {\r\n-          onStart: updateColor,\r\n-          onStartParams: ['#F9E5C9', 'Gold', '249, 229, 201'],\r\n-          onReverseComplete: updateColor,\r\n-          onReverseCompleteParams: ['#F9E5C9', 'Gold', '249, 229, 201']\r\n-        })\r\n-        .to(Elem, {\r\n-          onStart: updateColor,\r\n-          onStartParams: ['#505F4E', 'Alpine Green', '80, 95, 78'],\r\n-          onReverseComplete: updateColor,\r\n-          onReverseCompleteParams: ['#505F4E', 'Alpine Green', '80, 95, 78']\r\n-        })\r\n-        .to(Elem, {\r\n-          onStart: updateColor,\r\n-          onStartParams: ['#574f6f', 'Deep Purple', '87, 79, 111'],\r\n-          onReverseComplete: updateColor,\r\n-          onReverseCompleteParams: ['#574f6f', 'Deep Purple', '87, 79, 111']\r\n-        })\r\n-        .to(Elem, {\r\n-          onStart: updateColor,\r\n-          onStartParams: ['#A50011', 'Red', '165, 0, 17'],\r\n-          onReverseComplete: updateColor,\r\n-          onReverseCompleteParams: ['#A50011', 'Red', '165, 0, 17']\r\n-        })\r\n-        .to(Elem, {\r\n-          onStart: updateColor,\r\n-          onStartParams: ['#215E7C', 'Blue', '33, 94, 124'],\r\n-          onReverseComplete: updateColor,\r\n-          onReverseCompleteParams: ['#215E7C', 'Blue', '33, 94, 124']\r\n-        })\r\n+    return () => {\r\n+      if (t2) t2.kill()\r\n+    }\r\n+  }, [])\r\n \r\n-      return () => {\r\n-        if (t2) t2.kill()\r\n-      }\r\n-    }, [])\r\n   return (\r\n     <Section ref={sectionRef}>\r\n-      <Left ref={leftRef}></Left>\r\n+      <Left ref={leftRef} />\r\n       <Center ref={textRef} />\r\n-      <Right ref={rightRef}></Right>\r\n-      <Canvas camera={{ fov: 6.5 }}>\r\n-        <ambientLight intensity={1.25} />\r\n-        <directionalLight intensity={0.4} />\r\n-        <Suspense fallback={null}>\r\n-          <Model2 />\r\n-        </Suspense>\r\n-        <Environment preset=\"night\" />\r\n-        <AdaptiveDpr pixelated />\r\n-        <AdaptiveEvents />\r\n-        {/* <OrbitControls /> */}\r\n-      </Canvas>\r\n+      <Right ref={rightRef}>\r\n+        <Canvas camera={{ fov: 6.5 }}>\r\n+          <ambientLight intensity={1.25} />\r\n+          <directionalLight intensity={0.4} />\r\n+          <Suspense fallback={null}>\r\n+            <Model2 />\r\n+          </Suspense>\r\n+          {/* <OrbitControls /> */}\r\n+        </Canvas>\r\n+      </Right>\r\n     </Section>\r\n   )\r\n }\r\n \r\n"
                },
                {
                    "date": 1685533067681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,15 @@\n /* eslint-disable react-hooks/exhaustive-deps */\r\n-import gsap from 'gsap'\r\n-import React from 'react'\r\n-import { useRef, useLayoutEffect } from 'react'\r\n-import styled from 'styled-components'\r\n-import { Canvas } from '@react-three/fiber'\r\n-import { Suspense } from 'react'\r\n-import Model2 from '../components/Scene2'\r\n-import { useContext } from 'react'\r\n-import { ColorContext } from './../context/ColorContext'\r\n-import { useEffect } from 'react'\r\n+import gsap from \"gsap\";\r\n+import React from \"react\";\r\n+import { useRef, useLayoutEffect } from \"react\";\r\n+import styled from \"styled-components\";\r\n+import { Canvas } from \"@react-three/fiber\";\r\n+import { Suspense } from \"react\";\r\n+import Model2 from \"../components/Scene2\";\r\n+import { useContext } from \"react\";\r\n+import { ColorContext } from \"./../context/ColorContext\";\r\n+import { useEffect } from \"react\";\r\n \r\n const Section = styled.section`\r\n   width: 100vw;\r\n   height: 100vh;\r\n@@ -17,9 +17,9 @@\n \r\n   display: flex;\r\n   justify-content: space-between;\r\n   align-items: center;\r\n-`\r\n+`;\r\n \r\n const Left = styled.div`\r\n   width: 50%;\r\n   height: 100%;\r\n@@ -30,9 +30,9 @@\n \r\n   @media screen and (max-width: 48em) {\r\n     width: 100%;\r\n   }\r\n-`\r\n+`;\r\n const Right = styled.div`\r\n   width: 50%;\r\n   height: 100%;\r\n \r\n@@ -42,9 +42,9 @@\n \r\n   @media screen and (max-width: 48em) {\r\n     display: none;\r\n   }\r\n-`\r\n+`;\r\n \r\n const Center = styled.div`\r\n   width: 100%;\r\n   text-align: center;\r\n@@ -59,104 +59,104 @@\n   @media screen and (max-width: 48em) {\r\n     top: 2rem;\r\n     transform: translate(-50%, 0%) rotate(0deg);\r\n   }\r\n-`\r\n+`;\r\n \r\n const ColorSection = () => {\r\n-  const sectionRef = useRef(null)\r\n-  const rightRef = useRef(null)\r\n-  const leftRef = useRef(null)\r\n-  const textRef = useRef(null)\r\n+  const sectionRef = useRef(null);\r\n+  const rightRef = useRef(null);\r\n+  const leftRef = useRef(null);\r\n+  const textRef = useRef(null);\r\n \r\n-  const { currentColor, changeColorContext } = useContext(ColorContext)\r\n+  const { currentColor, changeColorContext } = useContext(ColorContext);\r\n \r\n   useEffect(() => {\r\n-    let rightElem = rightRef.current\r\n-    let leftElem = leftRef.current\r\n-    let textElem = textRef.current\r\n+    let rightElem = rightRef.current;\r\n+    let leftElem = leftRef.current;\r\n+    let textElem = textRef.current;\r\n \r\n-    textElem.innerText = currentColor.text\r\n-    textElem.style.color = currentColor.color\r\n+    textElem.innerText = currentColor.text;\r\n+    textElem.style.color = currentColor.color;\r\n \r\n-    rightElem.style.backgroundColor = `rgba(${currentColor.rgbColor}, 0.4)`\r\n-    leftElem.style.backgroundColor = `rgba(${currentColor.rgbColor}, 0.8)`\r\n-  }, [currentColor])\r\n+    rightElem.style.backgroundColor = `rgba(${currentColor.rgbColor}, 0.4)`;\r\n+    leftElem.style.backgroundColor = `rgba(${currentColor.rgbColor}, 0.8)`;\r\n+  }, [currentColor]);\r\n \r\n   useLayoutEffect(() => {\r\n-    let Elem = sectionRef.current\r\n+    let Elem = sectionRef.current;\r\n \r\n     let updateColor = (color, text, rgbColor) => {\r\n       const colorObj = {\r\n         color,\r\n         text,\r\n-        rgbColor\r\n-      }\r\n-      changeColorContext(colorObj)\r\n-    }\r\n+        rgbColor,\r\n+      };\r\n+      changeColorContext(colorObj);\r\n+    };\r\n \r\n     // pin the section\r\n     gsap.to(Elem, {\r\n       scrollTrigger: {\r\n         trigger: Elem,\r\n-        start: 'top top',\r\n+        start: \"top top\",\r\n         end: `+=${Elem.offsetWidth + 1000}`,\r\n         scrub: 1,\r\n         pin: true,\r\n-        pinSpacing: true\r\n-      }\r\n-    })\r\n+        pinSpacing: true,\r\n+      },\r\n+    });\r\n \r\n     let t2 = gsap\r\n       .timeline({\r\n         scrollTrigger: {\r\n           trigger: Elem,\r\n-          start: 'top top',\r\n+          start: \"top top\",\r\n           end: `+=${Elem.offsetWidth + 1000}`,\r\n-          scrub: 1\r\n-        }\r\n+          scrub: 1,\r\n+        },\r\n       })\r\n       .to(Elem, {\r\n         onStart: updateColor,\r\n-        onStartParams: ['#9BB5CE', 'Sierra Blue', '155, 181, 206'],\r\n+        onStartParams: [\"#9BB5CE\", \"Sierra Blue\", \"155, 181, 206\"],\r\n         onReverseComplete: updateColor,\r\n-        onReverseCompleteParams: ['#9BB5CE', 'Sierra Blue', '155, 181, 206']\r\n+        onReverseCompleteParams: [\"#9BB5CE\", \"Sierra Blue\", \"155, 181, 206\"],\r\n       })\r\n       .to(Elem, {\r\n         onStart: updateColor,\r\n-        onStartParams: ['#F9E5C9', 'Gold', '249, 229, 201'],\r\n+        onStartParams: [\"#F9E5C9\", \"Gold\", \"249, 229, 201\"],\r\n         onReverseComplete: updateColor,\r\n-        onReverseCompleteParams: ['#F9E5C9', 'Gold', '249, 229, 201']\r\n+        onReverseCompleteParams: [\"#F9E5C9\", \"Gold\", \"249, 229, 201\"],\r\n       })\r\n       .to(Elem, {\r\n         onStart: updateColor,\r\n-        onStartParams: ['#505F4E', 'Alpine Green', '80, 95, 78'],\r\n+        onStartParams: [\"#505F4E\", \"Alpine Green\", \"80, 95, 78\"],\r\n         onReverseComplete: updateColor,\r\n-        onReverseCompleteParams: ['#505F4E', 'Alpine Green', '80, 95, 78']\r\n+        onReverseCompleteParams: [\"#505F4E\", \"Alpine Green\", \"80, 95, 78\"],\r\n       })\r\n       .to(Elem, {\r\n         onStart: updateColor,\r\n-        onStartParams: ['#574f6f', 'Deep Purple', '87, 79, 111'],\r\n+        onStartParams: [\"#574f6f\", \"Deep Purple\", \"87, 79, 111\"],\r\n         onReverseComplete: updateColor,\r\n-        onReverseCompleteParams: ['#574f6f', 'Deep Purple', '87, 79, 111']\r\n+        onReverseCompleteParams: [\"#574f6f\", \"Deep Purple\", \"87, 79, 111\"],\r\n       })\r\n       .to(Elem, {\r\n         onStart: updateColor,\r\n-        onStartParams: ['#A50011', 'Red', '165, 0, 17'],\r\n+        onStartParams: [\"#A50011\", \"Red\", \"165, 0, 17\"],\r\n         onReverseComplete: updateColor,\r\n-        onReverseCompleteParams: ['#A50011', 'Red', '165, 0, 17']\r\n+        onReverseCompleteParams: [\"#A50011\", \"Red\", \"165, 0, 17\"],\r\n       })\r\n       .to(Elem, {\r\n         onStart: updateColor,\r\n-        onStartParams: ['#215E7C', 'Blue', '33, 94, 124'],\r\n+        onStartParams: [\"#215E7C\", \"Blue\", \"33, 94, 124\"],\r\n         onReverseComplete: updateColor,\r\n-        onReverseCompleteParams: ['#215E7C', 'Blue', '33, 94, 124']\r\n-      })\r\n+        onReverseCompleteParams: [\"#215E7C\", \"Blue\", \"33, 94, 124\"],\r\n+      });\r\n \r\n     return () => {\r\n-      if (t2) t2.kill()\r\n-    }\r\n-  }, [])\r\n+      if (t2) t2.kill();\r\n+    };\r\n+  }, []);\r\n \r\n   return (\r\n     <Section ref={sectionRef}>\r\n       <Left ref={leftRef} />\r\n@@ -171,8 +171,8 @@\n           {/* <OrbitControls /> */}\r\n         </Canvas>\r\n       </Right>\r\n     </Section>\r\n-  )\r\n-}\r\n+  );\r\n+};\r\n \r\n-export default ColorSection\r\n+export default ColorSection;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1685533115565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,11 @@\n /* eslint-disable react-hooks/exhaustive-deps */\r\n-import gsap from \"gsap\";\r\n-import React from \"react\";\r\n-import { useRef, useLayoutEffect } from \"react\";\r\n-import styled from \"styled-components\";\r\n-import { Canvas } from \"@react-three/fiber\";\r\n-import { Suspense } from \"react\";\r\n-import Model2 from \"../components/Scene2\";\r\n-import { useContext } from \"react\";\r\n-import { ColorContext } from \"./../context/ColorContext\";\r\n-import { useEffect } from \"react\";\r\n+import { AdaptiveDpr, AdaptiveEvents, Environment, useGLTF } from '@react-three/drei'\r\n+import { Canvas } from '@react-three/fiber'\r\n+import gsap from 'gsap'\r\n+import React, { Suspense, useLayoutEffect, useRef } from 'react'\r\n+import styled from 'styled-components'\r\n+import Model2 from '../components/Scene2'\r\n \r\n const Section = styled.section`\r\n   width: 100vw;\r\n   height: 100vh;\r\n@@ -17,10 +13,11 @@\n \r\n   display: flex;\r\n   justify-content: space-between;\r\n   align-items: center;\r\n-`;\r\n \r\n+`\r\n+\r\n const Left = styled.div`\r\n   width: 50%;\r\n   height: 100%;\r\n \r\n@@ -30,9 +27,9 @@\n \r\n   @media screen and (max-width: 48em) {\r\n     width: 100%;\r\n   }\r\n-`;\r\n+`\r\n const Right = styled.div`\r\n   width: 50%;\r\n   height: 100%;\r\n \r\n@@ -42,9 +39,9 @@\n \r\n   @media screen and (max-width: 48em) {\r\n     display: none;\r\n   }\r\n-`;\r\n+`\r\n \r\n const Center = styled.div`\r\n   width: 100%;\r\n   text-align: center;\r\n@@ -59,120 +56,117 @@\n   @media screen and (max-width: 48em) {\r\n     top: 2rem;\r\n     transform: translate(-50%, 0%) rotate(0deg);\r\n   }\r\n-`;\r\n \r\n-const ColorSection = () => {\r\n-  const sectionRef = useRef(null);\r\n-  const rightRef = useRef(null);\r\n-  const leftRef = useRef(null);\r\n-  const textRef = useRef(null);\r\n \r\n-  const { currentColor, changeColorContext } = useContext(ColorContext);\r\n+`\r\n \r\n-  useEffect(() => {\r\n-    let rightElem = rightRef.current;\r\n-    let leftElem = leftRef.current;\r\n-    let textElem = textRef.current;\r\n+const ColorSection = () => {\r\n+  const sectionRef = useRef(null)\r\n+  const rightRef = useRef(null)\r\n+  const leftRef = useRef(null)\r\n+  const textRef = useRef(null)\r\n+const {  materials } = useGLTF('/scene.gltf')\r\n+    useLayoutEffect(() => {\r\n+      let Elem = sectionRef.current\r\n+      let rightElem = rightRef.current\r\n+      let textElem = textRef.current\r\n+      let leftElem = leftRef.current\r\n \r\n-    textElem.innerText = currentColor.text;\r\n-    textElem.style.color = currentColor.color;\r\n \r\n-    rightElem.style.backgroundColor = `rgba(${currentColor.rgbColor}, 0.4)`;\r\n-    leftElem.style.backgroundColor = `rgba(${currentColor.rgbColor}, 0.8)`;\r\n-  }, [currentColor]);\r\n+      let updateColor = (color, text, rgbColor) => {\r\n+        materials.Body.color.set(color);\r\n+        textElem.innerText = text;\r\n+        rightElem.style.background = `rgba(${rgbColor},0.4)`\r\n+        leftElem.style.background = `rgba(${rgbColor},0.8)`\r\n+        // const colorObj = {\r\n+        //   color,\r\n+        //   text,\r\n+        //   rgbColor\r\n+        // }\r\n+        // changeColorContext(colorObj)\r\n+      }\r\n \r\n-  useLayoutEffect(() => {\r\n-    let Elem = sectionRef.current;\r\n-\r\n-    let updateColor = (color, text, rgbColor) => {\r\n-      const colorObj = {\r\n-        color,\r\n-        text,\r\n-        rgbColor,\r\n-      };\r\n-      changeColorContext(colorObj);\r\n-    };\r\n-\r\n-    // pin the section\r\n-    gsap.to(Elem, {\r\n-      scrollTrigger: {\r\n-        trigger: Elem,\r\n-        start: \"top top\",\r\n-        end: `+=${Elem.offsetWidth + 1000}`,\r\n-        scrub: 1,\r\n-        pin: true,\r\n-        pinSpacing: true,\r\n-      },\r\n-    });\r\n-\r\n-    let t2 = gsap\r\n-      .timeline({\r\n+      // pin the section \r\n+      gsap.to(Elem, {\r\n         scrollTrigger: {\r\n           trigger: Elem,\r\n-          start: \"top top\",\r\n+          start: 'top top',\r\n           end: `+=${Elem.offsetWidth + 1000}`,\r\n           scrub: 1,\r\n-        },\r\n+          pin: true,\r\n+          pinSpacing: true\r\n+        }\r\n       })\r\n-      .to(Elem, {\r\n-        onStart: updateColor,\r\n-        onStartParams: [\"#9BB5CE\", \"Sierra Blue\", \"155, 181, 206\"],\r\n-        onReverseComplete: updateColor,\r\n-        onReverseCompleteParams: [\"#9BB5CE\", \"Sierra Blue\", \"155, 181, 206\"],\r\n-      })\r\n-      .to(Elem, {\r\n-        onStart: updateColor,\r\n-        onStartParams: [\"#F9E5C9\", \"Gold\", \"249, 229, 201\"],\r\n-        onReverseComplete: updateColor,\r\n-        onReverseCompleteParams: [\"#F9E5C9\", \"Gold\", \"249, 229, 201\"],\r\n-      })\r\n-      .to(Elem, {\r\n-        onStart: updateColor,\r\n-        onStartParams: [\"#505F4E\", \"Alpine Green\", \"80, 95, 78\"],\r\n-        onReverseComplete: updateColor,\r\n-        onReverseCompleteParams: [\"#505F4E\", \"Alpine Green\", \"80, 95, 78\"],\r\n-      })\r\n-      .to(Elem, {\r\n-        onStart: updateColor,\r\n-        onStartParams: [\"#574f6f\", \"Deep Purple\", \"87, 79, 111\"],\r\n-        onReverseComplete: updateColor,\r\n-        onReverseCompleteParams: [\"#574f6f\", \"Deep Purple\", \"87, 79, 111\"],\r\n-      })\r\n-      .to(Elem, {\r\n-        onStart: updateColor,\r\n-        onStartParams: [\"#A50011\", \"Red\", \"165, 0, 17\"],\r\n-        onReverseComplete: updateColor,\r\n-        onReverseCompleteParams: [\"#A50011\", \"Red\", \"165, 0, 17\"],\r\n-      })\r\n-      .to(Elem, {\r\n\\ No newline at end of file\n-        onStart: updateColor,\r\n-        onStartParams: [\"#215E7C\", \"Blue\", \"33, 94, 124\"],\r\n-        onReverseComplete: updateColor,\r\n-        onReverseCompleteParams: [\"#215E7C\", \"Blue\", \"33, 94, 124\"],\r\n-      });\r\n \r\n-    return () => {\r\n-      if (t2) t2.kill();\r\n-    };\r\n-  }, []);\r\n+      let t2 = gsap\r\n+        .timeline({\r\n+          scrollTrigger: {\r\n+            trigger: Elem,\r\n+            start: 'top top',\r\n+            end: `+=${Elem.offsetWidth + 1000}`,\r\n+            scrub: 1\r\n+          }\r\n+        })\r\n+        .to(Elem, {\r\n+          onStart: updateColor,\r\n+          onStartParams: ['#9BB5CE', 'Sierra Blue', '155, 181, 206'],\r\n+          onReverseComplete: updateColor,\r\n+          onReverseCompleteParams: ['#9BB5CE', 'Sierra Blue', '155, 181, 206']\r\n+        })\r\n+        .to(Elem, {\r\n+          onStart: updateColor,\r\n+          onStartParams: ['#F9E5C9', 'Gold', '249, 229, 201'],\r\n+          onReverseComplete: updateColor,\r\n+          onReverseCompleteParams: ['#F9E5C9', 'Gold', '249, 229, 201']\r\n+        })\r\n+        .to(Elem, {\r\n+          onStart: updateColor,\r\n+          onStartParams: ['#505F4E', 'Alpine Green', '80, 95, 78'],\r\n+          onReverseComplete: updateColor,\r\n+          onReverseCompleteParams: ['#505F4E', 'Alpine Green', '80, 95, 78']\r\n+        })\r\n+        .to(Elem, {\r\n+          onStart: updateColor,\r\n+          onStartParams: ['#574f6f', 'Deep Purple', '87, 79, 111'],\r\n+          onReverseComplete: updateColor,\r\n+          onReverseCompleteParams: ['#574f6f', 'Deep Purple', '87, 79, 111']\r\n+        })\r\n+        .to(Elem, {\r\n+          onStart: updateColor,\r\n+          onStartParams: ['#A50011', 'Red', '165, 0, 17'],\r\n+          onReverseComplete: updateColor,\r\n+          onReverseCompleteParams: ['#A50011', 'Red', '165, 0, 17']\r\n+        })\r\n+        .to(Elem, {\r\n+          onStart: updateColor,\r\n+          onStartParams: ['#215E7C', 'Blue', '33, 94, 124'],\r\n+          onReverseComplete: updateColor,\r\n+          onReverseCompleteParams: ['#215E7C', 'Blue', '33, 94, 124']\r\n+        })\r\n \r\n+      return () => {\r\n+        if (t2) t2.kill()\r\n+      }\r\n+    }, [])\r\n   return (\r\n     <Section ref={sectionRef}>\r\n-      <Left ref={leftRef} />\r\n+      <Left ref={leftRef}/>\r\n       <Center ref={textRef} />\r\n-      <Right ref={rightRef}>\r\n-        <Canvas camera={{ fov: 6.5 }}>\r\n-          <ambientLight intensity={1.25} />\r\n-          <directionalLight intensity={0.4} />\r\n-          <Suspense fallback={null}>\r\n-            <Model2 />\r\n-          </Suspense>\r\n-          {/* <OrbitControls /> */}\r\n-        </Canvas>\r\n-      </Right>\r\n+      <Right ref={rightRef}/>\r\n+      <Canvas camera={{ fov: 6.5 }}>\r\n+        <ambientLight intensity={1.25} />\r\n+        <directionalLight intensity={0.4} />\r\n+        <Suspense fallback={null}>\r\n+          <Model2 />\r\n+        </Suspense>\r\n+        <Environment preset=\"night\" />\r\n+        <AdaptiveDpr pixelated />\r\n+        <AdaptiveEvents />\r\n+        {/* <OrbitControls /> */}\r\n+      </Canvas>\r\n     </Section>\r\n-  );\r\n-};\r\n+  )\r\n+}\r\n \r\n-export default ColorSection;\n+export default ColorSection\r\n"
                }
            ],
            "date": 1685508494161,
            "name": "Commit-0",
            "content": "import React from 'react'\r\n\r\nconst ColorSection = () => {\r\n  return (\r\n    <div>ColorSection</div>\r\n  )\r\n}\r\n\r\nexport default ColorSection"
        }
    ]
}